1.图：图是由顶点的有穷非空集合和顶点之间边的集合组成，通常表示为：G(V,E),其中G表示一个图，V表示图中的顶点的集合，E是图中边的集合。
说明：图中的顶点是有穷非空的  但是边可以是非空的


2.图的相关定义
(1)无向边：若顶点vi到vj没有方向，就称为无向边。---------无序偶对（vi，vj）
 无向图：任意两个顶点都是无向边，此图就是无向图。顶点的度：和顶点相关联边的个数。
 有向边：若从顶点vi到vj的边有方向，称此边为又向边，也叫做弧。------有序偶对<vi
   ,vj>  vi叫弧尾 vj叫弧头
 有向图：任意两个顶点都是有向边，此图就是有向图。顶点的度=入度+出度
 无向完全图：任意两个顶点之间都有边（直接相连） n(n-1)/2
 有向完全图：任意两个顶点之间都有方向互为相反的弧 n(n-1)
 网：带权的图称为网
 环 简单路径(没有重复的端点) 简单环
(2)连通图:在无向图中，任意两点都是连通的，此图就是连通图。
     (两点间有路径就可以，不要求直接相连，可以间接相连)
 连通分量--极大（在多一个顶点就不是连通图。连通图的极大是本身，非连通图的极大是几个组成）   强连通图 强连通分量--极大
 连通图的生成树：极小连通子图，并且n个顶点 n-1条边
 有向树：只有一个顶点的入度为0，其余顶点的入度均为1。
 生成森林：含有全部的顶点，但是不是含有全部的弧。

 3.图的存储结构
 (1)邻接矩阵
 两个数组：一个一维数组用来存放顶点信息，另外一个二维数组存放边的信息。
 初始化矩阵的时间复杂度O(n^2) 创建邻接矩阵的时间复杂度O(n^2+n+e) 其中n是顶点的数量 e是变得数量
 (2)邻接表
 数组和链表相结合的方法
 (3)十字链表----有向图
邻接表和逆邻接表的结合  https://www.cnblogs.com/cuish/p/3764550.html 对表中字段的说明
 (4)邻接多重表----无向图  
 (5)边集数组
  两个一维数组构成 分别存放顶点信息和边的信息


 4.图的遍历----树的遍历是：前序、后序、中序和层序遍历四种
 （1）深度优先遍历---类似与前序遍历
  思想：以一个未访问的顶点作为起点，沿当前顶点的边走到未访问过的顶点，当没有未访问到的顶点时，返回到上一个订单，继续试探被的顶点，知道所有顶点都访问到。
  使用邻接矩阵的时间复杂度是O(n^2) 使用邻链表的时间复杂度O(n+e)

  （2）广度优先遍历-----类似与层序遍历----队列实现代码
  思想：以v为起点，由近到远，依次访问和v有路径想通并且路径长度为1,2,3....顶点。-----层次
  从时间复杂度来看，深度优先遍历和广度优先遍历的时间复杂度是一致的。

5.图的最短路径
算法：1.迪杰斯特拉-----一次计算出源节点与所有其他节点的最短路劲
2.佛洛依德算法
